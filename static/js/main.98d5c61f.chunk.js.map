{"version":3,"sources":["components/Header.js","components/Input.js","components/Select.js","components/Form.js","components/SignUpForm.js","serviceWorker.js","index.js"],"names":["Header","className","Input","register","name","rest","ref","Select","options","noValue","value","validNumber","RegExp","validEmail","validContact","source","validPassword","FormSchema","object","shape","firstName","string","required","surname","contact","matches","message","excludeEmptyString","password","birthday","day","month","year","gender","preferred_pronoun","when","is","then","custom_gender","days","allDays","i","push","key","years","allYears","thisYear","Date","getFullYear","Form","props","useForm","validationSchema","handleSubmit","errors","reset","useState","showCustomGender","setShowCustomGender","handleGenderChange","event","target","onSubmit","data","console","log","type","placeholder","htmlFor","map","id","onChange","pronoun","SignUpForm","submittedState","setSubmittedState","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.98d5c61f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"Header\">\n    <h1 className=\"Header__main\">Create a new account</h1>\n    <h2 className=\"Header__sub-heading mt-0 mb-m\">It's quick and easy.</h2>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Input = ({ register, name, ...rest }) => (\n  <input name={name} ref={register} {...rest} />\n);\n\nexport default Input;\n","import React from 'react';\n\nconst Select = ({ register, options, name, noValue, ...rest }) => (\n  <select name={name} ref={register} {...rest}>\n    <option value=\"\">{noValue}</option>\n    {options}\n  </select>\n);\n\nexport default Select;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { string, object } from 'yup';\nimport Input from './Input';\nimport Select from './Select';\n\nconst validNumber = new RegExp(/^(\\+[0-9]{2}|[0]{1})[0-9]{9,10}$/);\nconst validEmail = new RegExp(/^([_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5}))$/);\nconst validContact = new RegExp(validNumber.source + \"|\" + validEmail.source);\nconst validPassword = new RegExp(/^[\\w\\d!@#$%^&*]{6,}$/);\n\nconst FormSchema = object().shape({\n  firstName: string().required('First name is required'),\n  surname: string().required('Surname is required'),\n  contact: string().required('Contact number or email is required').matches(validContact, { message: 'Must be a valid email or phone number', excludeEmptyString: true }),\n  password: string().required('Password is required').matches(validPassword, { message: 'Enter a combination of at least six numbers, letters and any of these !@#$%^&* characters', excludeEmptyString: true }),\n  birthday: object({\n    day: string().required(),\n    month: string().required(),\n    year: string().required()\n  }),\n  gender: string().required('Gender is required'),\n  preferred_pronoun: string()\n    .when('gender', {\n      is: 'custom',\n      then: string().required('Preferred pronoun is required')\n    }),\n  custom_gender: string()\n});\n\nconst days = () => {\n  const allDays = [];\n  for (var i = 1; i <= 31; i++) {\n    allDays.push(<option key={i} value={i}>{i}</option>);\n  }\n  return allDays;\n}\n\nconst months = () => {\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  return monthNames.map((month, i) => <option key={i + 1} value={i + 1}>{month}</option>)\n}\n\nconst years = () => {\n  const allYears = [];\n  const thisYear = new Date().getFullYear();\n  for (var i = thisYear; i >= thisYear - 115; i--) {\n    allYears.push(<option key={i} value={i}>{i}</option>);\n  }\n  return allYears;\n}\n\nconst pronouns = () => {\n  const pronounList = ['She: \"Wish her a happy birthday!\"', 'He: \"Wish him a happy birthday!\"', 'They: \"Wish them a happy birthday!\"'];\n  return pronounList.map((pronoun, i) => <option key={i + 1} value={i + 1}>{pronoun}</option>);\n}\n\nconst Form = (props) => {\n  const { register, handleSubmit, errors, reset } = useForm({\n    validationSchema: FormSchema\n  });\n  const [showCustomGender, setShowCustomGender] = useState(false); \n  \n  const onSubmit = data => {\n    console.log(data);\n    reset();\n    props.onSubmit();\n  }\n\n  const handleGenderChange = event => setShowCustomGender(event.target.value === 'custom');\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"Form__container\">\n        <div className=\"Form__name mb-m d-flex space-between\">\n          <div className=\"Form__name-container mr-s\">\n            <Input type=\"text\" className={errors.firstName && 'red-border'} name=\"firstName\" register={register} placeholder=\"First name\" />\n            {errors.firstName && <i className=\"Form__error-message\">{errors.firstName.message}</i>}\n          </div>\n          <div className=\"Form__name-container\">\n            <Input type=\"text\" className={errors.surname && 'red-border'} name=\"surname\" register={register} placeholder=\"Surname\" />\n            {errors.surname && <i className=\"Form__error-message\">{errors.surname.message}</i>}\n          </div>\n        </div>\n        <div className=\"Form__contact mb-m\">\n          <Input type=\"text\" className={errors.contact && 'red-border'} name=\"contact\" register={register} placeholder=\"Mobile number or email address\" />\n          {errors.contact && <i className=\"Form__error-message\">{errors.contact.message}</i>}\n        </div>\n        <div className=\"Form__password mb-m\">\n          <Input type=\"password\" className={errors.password && 'red-border'} name=\"password\" register={register} placeholder=\"New password\" />\n          {errors.password && <i className=\"Form__error-message\">{errors.password.message}</i>}\n        </div>\n        <div className=\"Form__birthday\">\n          <div className=\"sub-heading mt-m mb-s\">\n            <label htmlFor=\"birthday\">Birthday</label>\n          </div>\n          <Select name=\"birthday.day\" className={errors.birthday?.day && 'red-border'} register={register} options={days()} noValue={\"Day\"} />\n          <Select name=\"birthday.month\" className={errors.birthday?.month && 'red-border'} register={register} options={months()} noValue={\"Month\"} />\n          <Select name=\"birthday.year\" className={errors.birthday?.year && 'red-border'} register={register} options={years()} noValue={\"Year\"} />\n          {(errors.birthday?.day || errors.birthday?.month || errors.birthday?.year) &&\n            <div><i className=\"Form__error-message\">Birthday is required.</i></div>}\n        </div>\n        <div className=\"Form__gender\">\n          <div className=\"sub-heading mt-m mb-s\">\n            <label htmlFor=\"gender\">Gender</label>\n          </div>\n          <span className={`Form__gender-container ${errors.gender && 'red-border'}`}>\n            <Input type=\"radio\" id=\"female-input\" name=\"gender\" value=\"female\" register={register} onChange={event => handleGenderChange(event)} />\n            <label htmlFor=\"female-input\">Female</label>\n          </span>\n          <span className={`Form__gender-container ${errors.gender && 'red-border'}`}>\n            <Input type=\"radio\" id=\"male-input\" name=\"gender\" value=\"male\" register={register} onChange={event => handleGenderChange(event)}  />\n            <label htmlFor=\"male-input\">Male</label>\n          </span>\n          <span className={`Form__gender-container ${errors.gender && 'red-border'}`}>\n            <Input type=\"radio\" id=\"custom-input\" name=\"gender\" value=\"custom\" register={register} onChange={event => handleGenderChange(event)}  />\n            <label htmlFor=\"custom-input\">Custom</label>\n          </span>\n          {errors.gender && <div><i className=\"Form__error-message\">Gender is required.</i></div>}\n          {showCustomGender && <div className=\"Form__gender-custom mt-m\">\n            <Select name=\"preferred_pronoun\" className={errors.preferred_pronoun && 'red-border'} register={register} options={pronouns()} noValue={\"Select your pronoun\"} />\n            {errors.preferred_pronoun && <div><i className=\"Form__error-message\">Preferred pronoun is required.</i></div>}\n            <div className=\"sub-text\">Your pronoun is visible to everyone.</div>\n            <div className=\"my-s\">\n              <Input type=\"text\" name=\"custom_gender\" register={register} placeholder=\"Gender (optional)\" />\n            </div>\n          </div>}\n        </div>\n      </div>\n      <div className=\"Form__termsAndConditions\">\n        <p className=\"Form__termsAndConditions-text\">\n          By clicking Sign Up, you agree to our Terms. Learn how we collect, use and share your data in our Data Policy and how we use cookies and similar technology in our Cookie Policy. You may receive SMS notifications from us and can opt out at any time.\n        </p>\n      </div>\n      <div className=\"Form__submit-button-container\">\n        <button type=\"submit\" className=\"button button-green\">Sign Up</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useState } from 'react';\nimport Header from './Header';\nimport Form from './Form';\n\nconst SignUpForm = () => {\n  const [submittedState, setSubmittedState] = useState(false);\n  \n  const handleFormSubmit = () => {\n    setSubmittedState(true);\n    setTimeout(() => setSubmittedState(false), 3000);\n  }\n\n  return (\n    <div className = \"SignUpForm\">\n      <Header />\n      <Form \n        onSubmit={handleFormSubmit} \n      />\n      {submittedState && <h2>Form Submitted!</h2>}\n    </div>\n  );\n}\n\nexport default SignUpForm;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport SignUpForm from './components/SignUpForm';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SignUpForm />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}